/* Generated by Yosys 0.48+5 (git sha1 7a362f1f7, clang++ 18.1.8 -fPIC -O3) */

(* src = "generators/generated/verilog_sv2v_clean/Mux4.v:1.1-17.10" *)
module Multiplexer(io_inputs_0, io_inputs_1, io_inputs_2, io_inputs_3, io_select, io_output);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:15.14-15.18" *)
  wire [31:0] _GEN;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:9.14-9.25" *)
  input [7:0] io_inputs_0;
  wire [7:0] io_inputs_0;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:10.14-10.25" *)
  input [7:0] io_inputs_1;
  wire [7:0] io_inputs_1;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:11.14-11.25" *)
  input [7:0] io_inputs_2;
  wire [7:0] io_inputs_2;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:12.14-12.25" *)
  input [7:0] io_inputs_3;
  wire [7:0] io_inputs_3;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:14.20-14.29" *)
  output [7:0] io_output;
  wire [7:0] io_output;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:13.14-13.23" *)
  input [1:0] io_select;
  wire [1:0] io_select;
  assign _00_ = io_select[0] ? io_inputs_1[0] : io_inputs_0[0];
  assign _01_ = io_select[0] ? io_inputs_3[0] : io_inputs_2[0];
  assign io_output[0] = io_select[1] ? _01_ : _00_;
  assign _02_ = io_select[0] ? io_inputs_1[1] : io_inputs_0[1];
  assign _03_ = io_select[0] ? io_inputs_3[1] : io_inputs_2[1];
  assign io_output[1] = io_select[1] ? _03_ : _02_;
  assign _04_ = io_select[0] ? io_inputs_1[2] : io_inputs_0[2];
  assign _05_ = io_select[0] ? io_inputs_3[2] : io_inputs_2[2];
  assign io_output[2] = io_select[1] ? _05_ : _04_;
  assign _06_ = io_select[0] ? io_inputs_1[3] : io_inputs_0[3];
  assign _07_ = io_select[0] ? io_inputs_3[3] : io_inputs_2[3];
  assign io_output[3] = io_select[1] ? _07_ : _06_;
  assign _08_ = io_select[0] ? io_inputs_1[4] : io_inputs_0[4];
  assign _09_ = io_select[0] ? io_inputs_3[4] : io_inputs_2[4];
  assign io_output[4] = io_select[1] ? _09_ : _08_;
  assign _10_ = io_select[0] ? io_inputs_1[5] : io_inputs_0[5];
  assign _11_ = io_select[0] ? io_inputs_3[5] : io_inputs_2[5];
  assign io_output[5] = io_select[1] ? _11_ : _10_;
  assign _12_ = io_select[0] ? io_inputs_1[6] : io_inputs_0[6];
  assign _13_ = io_select[0] ? io_inputs_3[6] : io_inputs_2[6];
  assign io_output[6] = io_select[1] ? _13_ : _12_;
  assign _14_ = io_select[0] ? io_inputs_1[7] : io_inputs_0[7];
  assign _15_ = io_select[0] ? io_inputs_3[7] : io_inputs_2[7];
  assign io_output[7] = io_select[1] ? _15_ : _14_;
  assign _GEN = { io_inputs_3, io_inputs_2, io_inputs_1, io_inputs_0 };
endmodule

(* top =  1  *)
(* src = "generators/generated/verilog_sv2v_clean/Mux4.v:18.1-44.10" *)
module Mux4(clock, reset, io_inputs_0, io_inputs_1, io_inputs_2, io_inputs_3, io_select, io_output);
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:28.8-28.13" *)
  input clock;
  wire clock;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:30.14-30.25" *)
  input [7:0] io_inputs_0;
  wire [7:0] io_inputs_0;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:31.14-31.25" *)
  input [7:0] io_inputs_1;
  wire [7:0] io_inputs_1;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:32.14-32.25" *)
  input [7:0] io_inputs_2;
  wire [7:0] io_inputs_2;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:33.14-33.25" *)
  input [7:0] io_inputs_3;
  wire [7:0] io_inputs_3;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:35.20-35.29" *)
  output [7:0] io_output;
  wire [7:0] io_output;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:34.14-34.23" *)
  input [1:0] io_select;
  wire [1:0] io_select;
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:29.8-29.13" *)
  input reset;
  wire reset;
  (* module_not_derived = 32'd1 *)
  (* src = "generators/generated/verilog_sv2v_clean/Mux4.v:36.14-43.3" *)
  Multiplexer io_output_mux (
    .io_inputs_0(io_inputs_0),
    .io_inputs_1(io_inputs_1),
    .io_inputs_2(io_inputs_2),
    .io_inputs_3(io_inputs_3),
    .io_output(io_output),
    .io_select(io_select)
  );
endmodule
