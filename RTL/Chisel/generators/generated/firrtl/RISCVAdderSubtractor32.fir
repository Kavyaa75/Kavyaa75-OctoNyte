FIRRTL version 3.3.0
circuit RISCVAdderSubtractor32 :%[[
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~RISCVAdderSubtractor32|RISCVAdderSubtractor32",
    "group":"RISCVAdderSubtractor32"
  }
]]
  module RISCVAdderSubtractor32 : @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 55:7]
    input clock : Clock @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 55:7]
    input reset : UInt<1> @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 55:7]
    output io : { flip a : UInt<32>, flip b : UInt<32>, flip opcode : UInt<4>, flip carryIn : UInt<1>, result : UInt<32>, carryOut : UInt<1>, overflowFlag : UInt<1>, zeroFlag : UInt<1>, negativeFlag : UInt<1>} @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor.scala 11:14]

    invalidate io.carryOut @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor.scala 27:15]
    invalidate io.overflowFlag @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor.scala 28:19]
    invalidate io.zeroFlag @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor.scala 29:15]
    invalidate io.negativeFlag @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor.scala 30:19]
    node _isSub_T = bits(io.opcode, 3, 3) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 63:24]
    node isSub = eq(_isSub_T, UInt<1>(0h1)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 63:28]
    node isSigned = bits(io.opcode, 2, 2) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 64:27]
    node operandSize = bits(io.opcode, 1, 0) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 65:30]
    node _width_T = eq(operandSize, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 69:18]
    node _width_T_1 = eq(operandSize, UInt<1>(0h1)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 70:18]
    node _width_T_2 = eq(operandSize, UInt<2>(0h2)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 71:18]
    node _width_T_3 = mux(_width_T_2, UInt<6>(0h20), UInt<6>(0h20)) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _width_T_4 = mux(_width_T_1, UInt<5>(0h10), _width_T_3) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node width = mux(_width_T, UInt<4>(0h8), _width_T_4) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _mask_T = eq(operandSize, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 76:18]
    node _mask_T_1 = eq(operandSize, UInt<1>(0h1)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 77:18]
    node _mask_T_2 = eq(operandSize, UInt<2>(0h2)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 78:18]
    node _mask_T_3 = mux(_mask_T_2, UInt<32>(0hffffffff), UInt<32>(0hffffffff)) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _mask_T_4 = mux(_mask_T_1, UInt<16>(0hffff), _mask_T_3) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node mask = mux(_mask_T, UInt<8>(0hff), _mask_T_4) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node aEffective = and(io.a, mask) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 83:25]
    node bEffective = and(io.b, mask) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 84:25]
    node _bAdjusted_T = not(bEffective) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 85:31]
    node _bAdjusted_T_1 = add(_bAdjusted_T, UInt<1>(0h1)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 85:43]
    node _bAdjusted_T_2 = tail(_bAdjusted_T_1, 1) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 85:43]
    node bAdjusted = mux(isSub, _bAdjusted_T_2, bEffective) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 85:22]
    node _fullArithmeticResult_T = asSInt(aEffective) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 101:17]
    node _fullArithmeticResult_T_1 = asSInt(bAdjusted) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 101:37]
    node _fullArithmeticResult_T_2 = add(_fullArithmeticResult_T, _fullArithmeticResult_T_1) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 101:24]
    node _fullArithmeticResult_T_3 = asUInt(_fullArithmeticResult_T_2) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 101:45]
    node _fullArithmeticResult_T_4 = add(aEffective, bAdjusted) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 102:17]
    node fullArithmeticResult = mux(isSigned, _fullArithmeticResult_T_3, _fullArithmeticResult_T_4) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 100:33]
    node truncatedResult = and(fullArithmeticResult, mask) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 104:46]
    connect io.result, truncatedResult @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 114:13]
    node _isCarry_T = eq(width, UInt<4>(0h8)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 127:12]
    node _isCarry_T_1 = bits(fullArithmeticResult, 8, 8) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 127:45]
    node _isCarry_T_2 = eq(width, UInt<5>(0h10)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 128:12]
    node _isCarry_T_3 = bits(fullArithmeticResult, 16, 16) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 128:45]
    node _isCarry_T_4 = eq(width, UInt<6>(0h20)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 129:12]
    node _isCarry_T_5 = bits(fullArithmeticResult, 32, 32) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 129:45]
    node _isCarry_T_6 = mux(_isCarry_T_4, _isCarry_T_5, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _isCarry_T_7 = mux(_isCarry_T_2, _isCarry_T_3, _isCarry_T_6) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node isCarry = mux(_isCarry_T, _isCarry_T_1, _isCarry_T_7) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _isBorrow_T = eq(isSigned, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 135:31]
    node _isBorrow_T_1 = and(isSub, _isBorrow_T) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 135:28]
    node _isBorrow_T_2 = lt(aEffective, bEffective) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 135:53]
    node isBorrow = mux(_isBorrow_T_1, _isBorrow_T_2, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 135:21]
    node _io_carryOut_T = eq(isSigned, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 141:6]
    node _io_carryOut_T_1 = eq(isSub, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 141:19]
    node _io_carryOut_T_2 = and(_io_carryOut_T, _io_carryOut_T_1) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 141:16]
    node _io_carryOut_T_3 = eq(isSigned, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 142:6]
    node _io_carryOut_T_4 = and(_io_carryOut_T_3, isSub) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 142:16]
    node _io_carryOut_T_5 = mux(_io_carryOut_T_4, isBorrow, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _io_carryOut_T_6 = mux(_io_carryOut_T_2, isCarry, _io_carryOut_T_5) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    connect io.carryOut, _io_carryOut_T_6 @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 140:15]
    wire aSign : UInt<1> @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 150:26]
    connect aSign, UInt<1>(0h0) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 150:26]
    wire bSign : UInt<1> @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 151:26]
    connect bSign, UInt<1>(0h0) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 151:26]
    wire sumSign : UInt<1> @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 152:28]
    connect sumSign, UInt<1>(0h0) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 152:28]
    node _aSign_T = eq(width, UInt<4>(0h8)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 155:12]
    node _aSign_T_1 = bits(aEffective, 7, 7) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 155:35]
    node _aSign_T_2 = eq(width, UInt<5>(0h10)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 156:12]
    node _aSign_T_3 = bits(aEffective, 15, 15) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 156:35]
    node _aSign_T_4 = eq(width, UInt<6>(0h20)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 157:12]
    node _aSign_T_5 = bits(aEffective, 31, 31) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 157:35]
    node _aSign_T_6 = mux(_aSign_T_4, _aSign_T_5, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _aSign_T_7 = mux(_aSign_T_2, _aSign_T_3, _aSign_T_6) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _aSign_T_8 = mux(_aSign_T, _aSign_T_1, _aSign_T_7) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    connect aSign, _aSign_T_8 @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 154:9]
    node _bSign_T = eq(width, UInt<4>(0h8)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 162:12]
    node _bSign_T_1 = bits(bAdjusted, 7, 7) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 162:34]
    node _bSign_T_2 = eq(width, UInt<5>(0h10)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 163:12]
    node _bSign_T_3 = bits(bAdjusted, 15, 15) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 163:34]
    node _bSign_T_4 = eq(width, UInt<6>(0h20)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 164:12]
    node _bSign_T_5 = bits(bAdjusted, 31, 31) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 164:34]
    node _bSign_T_6 = mux(_bSign_T_4, _bSign_T_5, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _bSign_T_7 = mux(_bSign_T_2, _bSign_T_3, _bSign_T_6) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _bSign_T_8 = mux(_bSign_T, _bSign_T_1, _bSign_T_7) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    connect bSign, _bSign_T_8 @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 161:9]
    node _sumSign_T = eq(width, UInt<4>(0h8)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 169:12]
    node _sumSign_T_1 = bits(fullArithmeticResult, 7, 7) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 169:45]
    node _sumSign_T_2 = eq(width, UInt<5>(0h10)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 170:12]
    node _sumSign_T_3 = bits(fullArithmeticResult, 15, 15) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 170:45]
    node _sumSign_T_4 = eq(width, UInt<6>(0h20)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 171:12]
    node _sumSign_T_5 = bits(fullArithmeticResult, 31, 31) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 171:45]
    node _sumSign_T_6 = mux(_sumSign_T_4, _sumSign_T_5, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _sumSign_T_7 = mux(_sumSign_T_2, _sumSign_T_3, _sumSign_T_6) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    node _sumSign_T_8 = mux(_sumSign_T, _sumSign_T_1, _sumSign_T_7) @[src/main/scala/chisel3/util/Mux.scala 126:16]
    connect sumSign, _sumSign_T_8 @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 168:11]
    node _isOverflow_T = eq(aSign, bSign) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 175:27]
    node _isOverflow_T_1 = neq(aSign, sumSign) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 175:48]
    node isOverflow = and(_isOverflow_T, _isOverflow_T_1) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 175:38]
    connect io.overflowFlag, isOverflow @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 177:19]
    node _isZero_T = orr(truncatedResult) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 179:33]
    node isZero = eq(_isZero_T, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 179:16]
    connect io.zeroFlag, isZero @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 181:15]
    node isNegative = mux(isSigned, sumSign, UInt<1>(0h0)) @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 183:23]
    connect io.negativeFlag, isNegative @[src/main/scala/OctoNyteCore/ExecutionUnits/RISCVAdderSubtractor32.scala 184:19]
