// Generated by CIRCT firtool-1.99.1

// Include register initializers in init blocks unless synthesis is set
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Standard header to adapt well known macros for register randomization.

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_
module WaveFormGenerator(	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
  input  clock,	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:41
         reset,	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:67
  output io_randomWave,	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:96
         io_clockWave	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:133
);

  wire [7:0] _GEN = '{1'h0, 1'h0, 1'h0, 1'h0, 1'h1, 1'h0, 1'h1, 1'h0};
  reg  [2:0] randomIndex;	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:12:22
  reg        clockToggle;	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:20:22
  always @(posedge clock) begin	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:41
    if (reset) begin	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:41
      randomIndex <= 3'h0;	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:7:17, :12:22
      clockToggle <= 1'h0;	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5, :20:22
    end
    else begin	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:41
      randomIndex <= randomIndex == 3'h4 ? 3'h0 : randomIndex + 3'h1;	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:6:17, :7:17, :12:22, :15:25, :16:27, :18:27
      clockToggle <= ~clockToggle;	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:20:22, :21:25
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
    `ifdef FIRRTL_BEFORE_INITIAL	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
      `FIRRTL_BEFORE_INITIAL	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
      automatic logic [31:0] _RANDOM[0:0];	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
      `ifdef INIT_RANDOM_PROLOG_	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
        `INIT_RANDOM_PROLOG_	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
        randomIndex = _RANDOM[/*Zero width*/ 1'b0][2:0];	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5, :12:22
        clockToggle = _RANDOM[/*Zero width*/ 1'b0][3];	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5, :12:22, :20:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
      `FIRRTL_AFTER_INITIAL	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_randomWave = _GEN[randomIndex];	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5, :12:22, :13:12
  assign io_clockWave = clockToggle;	// /home/jglossner/GitRepos/Structured_Computer_Architecture/RTL/Chisel/generators/generated/firrtl/WaveFormGenerator.fir.mlir:3:5, :20:22
endmodule

